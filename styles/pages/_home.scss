@use '../globals/' as *;
@use '../parts/common' as *;

#container {
  position: relative;
  @include bg(
    $image: "../images/bg-pattern.jpg",
    $size: auto,
    $repeat: repeat
  );
  transition: .5s;
  z-index: 50;
}

// .sideを前面に出すためのローカル・スタッキング・コンテキストの親要素を仕掛ける。
#main-content {
  position: relative;
  z-index: 0;
  & main {
    position: relative;
    z-index: -1;
  }
}


// // footerから先に作る。
// // 内容がほぼ同じであれば、
// // ハンバーガー・メニューのない構造が簡単なfooterから先に作り
// // それをheaderに汎用するという方針。
// // その際、同じものをコピーして持ってくることに違和感も持つ必要は全くない。
// .header {
//   position: fixed;
//   top: 0;
//   left: 0;
//   width: 100%;
//   height: $navHeight;
//   z-index: 100;

//   &.triggered {
//     background-color: rgba($color: $cWhite, $alpha: 0.9);
//     // 水平方向のオフセット 垂直方向のオフセット ぼかし距離 スプレッド距離 色
//     box-shadow: 0 0 25px -10px rgba($color: $cBlack, $alpha: 1);
//   }

//   &__inner {
//     display: flex;
//     justify-content: space-between;
//     align-items: center;
//     height: 100%;
//     @extend .content-width;
//   }

//   & .logo {
//     display: flex;
//     justify-content: center;
//     align-items: center;
//     font-size: 35px;
//     @include mq(md) {
//       flex-direction: row;
//       justify-content: flex-start;
//       font-size: 42px;
//     }

//     &__img {
//       width: 0.8em;
//     }

//     &__world {
//       color: $cTheme;
//     }
//   }

//   &__nav {
//     @extend .flex;
//     text-align: center;
//     justify-content: space-between;
//     align-items: center;
//     display: none;
//     @include mq(lg) {
//       display: block;
//     }
  
//     & > ul {
//       @extend .flex;
//       gap: 20px;
//       margin: 10px 0 20px;
//       @include mq(md) {
//         flex-direction: row;
//         gap: 30px;
//         align-items: center;
//       }
//       & > li {
//         & > a {
//           color: $cTheme;
//           text-transform: uppercase
//         }
//       }
//     }
//   }
// }


// .travel {
//   @extend .content-width;
//   @extend .mb-lg;
//   // インナーの影が配置画像で隠れてしまう件、
//   // 『ローカル・・・コンテキスト』を使って
//   // z-indexの値で要素を管理する。
//   // 1. 『ローカル・コンテキスト』の領域を確保する。
//   //     position: relative;
//   //     z-index: 0;
//   // 2. 背面に送りたい要素に対して、
//   //     position: relative;
//   //     z-index: -1;
//   // これだけ！！！　知らなかった。。。
//   &__inner {
//     // 『ローカル・コンテキスト』親要素をオン。
//     position: relative;
//     z-index: 0;
//     @extend .flex;
//     justify-content: space-between;
//     padding: 15px;
//     background-color: $cBgGray;
//     @include mq(md) {
//       padding: 50px;
//     }
//     @include mq(xl) {
//       padding: 50px 150px;
//     }
//   }
//   &__img {
//     height: 300px;
//     @extend .mb-sm;
//     transition: box-shadow 1s ease 2.2s;
//     // ローカル・コンテキストのやり方
//     // // 現在、『ローカル・コンテキスト』をオン。
//     // // // 影を擬似要素にする時は外す。
//     // &::before {
//     //   position: absolute;
//     //   top: 0;
//     //   left: 0;
//     //   width: 100%;
//     //   height: 100%;
//     //   content: '';
//     //   box-shadow: inset 0 0 30px $cBlack;
//     //   opacity: 0;
//     //   z-index: 3;
//     // }
//     // &.inview::before {
//     //   // @include anime($name: opacity, $dur: 1.75s, $dly: 2.5s);
//     // }
//     @include mq(md) {
//       flex-basis: 47%;
//     }
//     @include mq(lg) {
//       height: 400px;
//     }
//     &.inview {
//       box-shadow: inset 0 0 30px $cBlack;
//     }
//     & > img {
//       opacity: 1;
//       // 『ローカル・コンテキスト』子要素オン。
//       position: relative;
//       z-index: -1;
      
//       width: 100%;
//       height: 100%;
//       object-fit: cover;
//     }
//   }

//   &__texts {
//     @extend .pb-sm;
//     @include mq(md) {
//       display: flex;
//       align-items: flex-end;
//       flex-basis: 47%;
//     }
//     &.inview {
//       & .travel__title::before {
//         @include anime($name: scaleX, $dur: .8s, $dly: 1.6s);
//       }
//     }
//   }
//   &__title {
//     position: relative;
//     &::before {
//       display: none;
//       position: absolute;
//       top: 50%;
//       transform: translateY(-50%);
//       left: -120px;
//       content: '';
//       width: 100px;
//       height: 1px;
//       background-color: $cBlack;
//       transform: scaleX(0);
//       z-index: 2;
//       transform-origin: right;
//       // これもそう。考え方！
//       // 初期状態を作る => メディアクエリで切り替えたい=>スマホ表示はなし、
//       // PCで有りとなったときにこう書けるか？
//       @include mq(lg) {
//         display: block;
//       }
//     }
//   }
//   &__description {
//     @include mq(lg) {
//       margin-bottom: 40px;
//     }
//   }
// }

// @keyframes scaleX {
//   0% {
//     transform: scaleX(0);
//   }
//   100% {
//     transform: scaleX(1);
//   }
// }

// @keyframes opacity {
//   0% {
//     opacity: 0;
//   }
//   100% {
//     opacity: 1;
//   }
// }

.houses {
  @extend .content-width;
  @extend .mb-lg;
  &__inner {
    @extend .flex;
  }
  &__item {
    @include mq(md) {
      // 『display: flex;』の場合、
      // 要素（この場合は画像）を包含する要素の横幅の指定は、
      // 『flex-basis』で設定する。
      @include mq(md) {
        flex-basis: 50%;
        margin-bottom: 20px
      }
      @include mq(lg) {
        margin-bottom: 60px
      }
    }
  }
  &__title {
    @extend .mb-sm;
    @extend .font-lg;
  }
  &__btn {
    text-align: center;
    // 『display: flex;』なので、
    // 『flex-basis』を100％としてセンタリングというわけ。
    // 考え方を変える。
    flex-basis: 100%;
  }
}

.information {
  @extend .mb-lg;
  padding: 3em 0;
  background-color: rgba($color: $cTheme, $alpha: .2);

  & h2 {
    border-bottom: 1px solid $cGray-md;
  }

  &__inner {
    @extend .flex;
    justify-content: center;
    gap: 30px;
    @extend .content-width;
  }

  &__point {
    width: 100%;
    padding: 20px;
    text-align: center;
    background-color: rgba($color: $cWhite, $alpha: .9);
    border: 1px solid $cGray-md;
    & .temple-name {
      margin-bottom: .5em;
      font-size: 1.2em;
    }
    & .claim > span {
      display: block;
      line-height: 1.7;
      @include mq(lg) {
        display: inline;
        & + span {
          margin-left: 2em;
        }
      }
    }
  }

  &__businesshours-fee-traffic {
    @extend .flex;
    padding: 0 1em;
    font-size: .8em;
    line-height: 1.4;
    @include mq(md) {
      justify-content: center;
    }
  }

  &__item {
    display: flex;
    gap: 1em;
    & + & {
      margin-top: .5em;
    }
    @include mq(md) {
      justify-content: center;
    }
    & > dt {
      font-weight: 900;
      flex-basis: 32%;
      text-align-last: justify;
      @include mq(md) {
        flex-basis: unset;
        width: 8em;
      }
    }
    & > dd {
      flex-basis: calc(68% - 1em) ;
      @include mq(md) {
        flex-basis: unset;
        width: 300px;
        // width: calc(100% - 8em);
      }
    }
    &.traffic {
      margin-top: .5em;
      @include mq(lg) {
        margin-top: 0;
      }
      .item + .item {
        margin-top: .5em;
      }

    }
  }

  &__btn {
    display: block;
    margin-top: 30px;
    border: 1px solid $cGray-md;
    border-radius: 30px;
    @include mq(lg) {
      margin-top: 0;
    }
  }

  &__address-tel {
    font-size: .8em;
    line-height: 1.5;
    text-align: center;
    & > .tel > a {
      font-size: 1.5em;
      letter-spacing: .05em
    } 
  }
}




.to-content {
  @extend .content-width;
  @extend .mb-lg;
  @include mq(md) {
    width: 100%;
  }
  &__inner {
    @extend .flex;
    justify-content: center;
    gap: 0;
  }
  &__item {
    position: relative;
    aspect-ratio: 3/1.5;
    display: flex;
    @include mq(md) {
      flex-basis: 47%;
      aspect-ratio: 3/2;
      justify-content: center;
      align-items: center;
    }
    @include mq(lg) {
      flex-basis: 33.3%;
      aspect-ratio: 4/3;
    }

    &.how {
      @include bg($image: "../images/to-content-01.jpg");
    }
    &.insight {
      @include bg($image: "../images/to-content-02.jpg");
    }
    &.round {
      @include bg($image: "../images/to-content-03.jpg");
    }
    &.rival {
      @include bg($image: "../images/to-content-05.jpg");
    }
    &.hope {
      @include bg($image: "../images/to-content-08.jpg");
    }
    &.gather {
      @include bg($image: "../images/to-content-06.jpg");
    }
    &::before {
      @include positionAlt(tl);
      content: "";
      width: 100%;
      height: 100%;
      background-color: rgba($color: $cBlack, $alpha: .5);
    }
  }
  &__cover {
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 100%;
    height: 100%;
    text-align: center;
    line-height: 2;
    color: $cWhite;
    background-color: rgba($color: $cTheme, $alpha: .5);
    border: 1px solid $cWhite;
    transform: scaleX(.95) scaleY(.9);
    transition: .5s;
    @include mq(md) {
      transform: scaleX(.93) scaleY(.9);
    }
    &:hover {
      border: 1px solid transparent;
      transform: scale(1);
    }
  }

  &__catch {
    font-size: 1.3em
  }

  &__anchor {
    display: block;
    transition: .5s;
    &:hover {
      color: rgba($color: $cWhite, $alpha: .6);
      transform: scale(1.08);
      line-height: 2
      
    }
  }
}


.sns {
  margin: 0 auto;
  @extend .mb-lg;
  
  &>ul {
    @extend .flex;
    width: 100%;
    
    @include mq(md) {
      justify-content: center;
      column-gap: 20px;
      row-gap: 10px;
    }
  }
  
  &__inner {
    width: 90%;
  }

  &__channel {
    font-size: .875rem;
    margin: 0 auto;

    &+& {
      margin-top: 10px;

      @include mq(md) {
        margin-top: 0px;
      }
    }

    @include mq(md) {
      margin: 0;
    }
  }

  &__anchor {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 270px;
    padding: 1em 0;
    letter-spacing: .1em;
    background-color: $cWhite;
    border: 1px solid $cGray-lt;
    border-radius: 25px;

    &>span {
      display: inline-block;
      width: 22px;
      height: 17px;
      margin-right: .3em
    }
  }
}


// .popular {
//   // セクション全体の左右にマージンを設けたい。
//   // 背景のアミは左右いっぱいまでにしたレイアウトを
//   // 実現させるためのアイデア。

//   // あえて、『__inner』要素を設けてその擬似要素へ
//   // 色をつける作戦。
//   // なお、上下自由な位置から末端までアミを広げるネタも
//   // 入っている。CSS必見。

//   // そしてそして、小見出しが外れることはよくある。
//   // その場合は小見出しにマージンを適用させる。
//   &__header {
//     @extend .content-width;
//   }
//   &__inner {
//     position: relative;
//     z-index: 2;
//     &::before {
//       content: "";
//       position: absolute;
//       bottom: 0;
//       left: 0;
//       width: 100%;
//       height: 90%;
//       background-color: $cBgGray;
//     }
//   }
//   &__container {
//     // 背景画像のz-indexの前後の操作について、
//     // 思い込みを無くす。
//     // z-indexを使いたい『ためだけに』
//     // position: relative;
//     // を使っていい。
//     position: relative;
//     @extend .flex;
//     @extend .content-width;
//     z-index: 2;
//     @include mq(md) {
//       justify-content: space-between;
//     }
//   }
//   &__item {
//     // 要素（イメージなど）をflexでレイアウトしている時に、
//     // 間隔を調整したい時の要領。
//     @include mq(md) {
//       flex-basis: 47%;
//     }
//     @include mq(lg) {
//       flex-basis: 25%;
//     }
//     @include mq(xl) {
//       flex-basis: 23%;
//     }
//   }
//   &__img {
//     height: 150px;
//     margin-bottom: 5px;
//     @include mq(lg) {
//       height: 335px;
//     }
//     & > img {
//       width: 100%;
//       height: 100%;
//       object-fit: cover;
//       // 画像の位置を変えることができるプロパティ
//       // object-position: top;
//     }
//   }
//   &__title {
//     @extend .mb-sm;
//     @extend .font-md;
//   }
//   &__btn {
//     // ここも大事、反対のことをやりがち。
//     // 上の『houses』と同じ記述をしている。
//     // それは構わない。
//     // 共通化より、修正のしやすさを優先しているから。
//     text-align: center;
//     flex-basis: 100%;
//     @extend .mb-lg;
//   }
// }

// // .main-contentに囲まれた、
// // .side.left, main, .side.right　となっている位置関係を
// // ローカル・スタッキング・コンテキストで解決する。
// // .main-contentにローカル・スタッキング・コンテキストをかけて、
// // .sideにz-indexを1で解決
// .side {
//   position: fixed;
//   top: 70%;
//   transform: translateY(-50%);
//   transition: all ease 0.5s;
//   visibility: hidden;
//   opacity: 0;
//   @include mq(xl) {
//     &.inview {
//       visibility: visible;
//       opacity: 1;
//       &.left {
//         left: 50px;
//       }
//       &.right {
//         right: 50px
//       }
//     }
//   }
//   & .animate-title {
//     position: relative;
//     vertical-align: middle;
//     letter-spacing: 2px;
//     color: $cBlack;
//   }
//   &.left {
//     left: -50px;
//     & .side__inner {
//       transform: rotate(-90deg);
//       transform-origin: top left;
//       & .animate-title:not(:first-of-type) {
//         margin-left: 80px;
//       }
//     }
//   }
//   &.right {
//     right: -50px;
//     .side__inner {
//       transform: rotate(90deg);
//       transform-origin: top right;
//     }
//   }
// }

// .icon {
//   position: relative;
//   &::before {
//     position: absolute;
//     top: 50%;
//     transform: translateY(-50%);
//     left: -22px;
//     width: 1em;
//     height: 1em;
//     content: '';
//     color: $cBlack;
//   }
//   &.facebook::before {
//     @include bg($image: "../images/facebook.svg");
//   }
//   &.twitter::before {
//     @include bg($image: "../images/twitter.svg");
//   }
// }


.footer {
  font-size: 0.725rem;
  text-align: center;
  color: $cWhite;
  background-color: rgba($color: $cTheme, $alpha: .85);
  
  & .wrapper {
    @extend .content-width;
    padding: 60px 0;
    > div + div {
      margin-top: 20px;
    }
  }

  & .logo {
    width: 200px;
    margin: 0 auto;
    @include mq(md){
      width: 225px;
    }
    @include mq(lg) {
      width: 250px;
    }

    &__org-name {
      width: 100%;
      height: 100%;
    }
  }

  &__nav {
    & > ul {
      display: flex;
      justify-content: center;
      gap: 40px;
      &:nth-of-type(2) {
        gap: 30px;
        margin-top: 25px
      }
    }
  }

  &__address {
    line-height: 1.7;
  }

  &__icon {
    display: inline-block;
    width: 25px;
    height: 20px;
  }
}